{
    "sourceFile": "src/components/CarCard.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1759427891060,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1759427891060,
            "name": "Commit-0",
            "content": "import { Link } from \"react-router-dom\";\r\nimport { Car as CarType } from \"@/types/car\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { MapPin, Gauge, Heart, GitCompare } from \"lucide-react\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { useFavorites } from \"@/contexts/FavoritesContext\";\r\nimport { useComparison } from \"@/contexts/ComparisonContext\";\r\nimport { toast } from \"@/hooks/use-toast\";\r\n\r\ninterface CarCardProps {\r\n  car: CarType;\r\n}\r\n\r\nconst CarCard = ({ car }: CarCardProps) => {\r\n  const { isFavorite, toggleFavorite } = useFavorites();\r\n  const { isInComparison, addToComparison, removeFromComparison } = useComparison();\r\n\r\n  const handleFavoriteClick = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    toggleFavorite(car.id);\r\n    toast({\r\n      title: isFavorite(car.id) ? \"Removed from favorites\" : \"Added to favorites\",\r\n    });\r\n  };\r\n\r\n  const handleComparisonClick = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    if (isInComparison(car.id)) {\r\n      removeFromComparison(car.id);\r\n      toast({ title: \"Removed from comparison\" });\r\n    } else {\r\n      const added = addToComparison(car);\r\n      if (added) {\r\n        toast({ title: \"Added to comparison\" });\r\n      } else {\r\n        toast({\r\n          title: \"Comparison limit reached\",\r\n          description: \"You can only compare up to 3 cars at a time.\",\r\n          variant: \"destructive\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Link to={`/car/${car.id}`}>\r\n      <Card className=\"group overflow-hidden transition-smooth hover:shadow-card-hover\">\r\n        <div className=\"relative aspect-[4/3] overflow-hidden bg-muted\">\r\n          <img\r\n            src={car.images[0]}\r\n            alt={car.title}\r\n            className=\"h-full w-full object-cover transition-smooth group-hover:scale-105\"\r\n          />\r\n          <div className=\"absolute right-2 top-2 flex flex-wrap gap-1\">\r\n            {car.platform.map((platform, index) => (\r\n              <Badge key={index} variant=\"secondary\" className=\"bg-card/90 backdrop-blur-sm\">\r\n                {platform.name}\r\n              </Badge>\r\n            ))}\r\n          </div>\r\n          <div className=\"absolute left-2 top-2 flex gap-1\">\r\n            <Button\r\n              variant=\"secondary\"\r\n              size=\"icon\"\r\n              className=\"h-8 w-8 bg-card/90 backdrop-blur-sm hover:bg-card\"\r\n              onClick={handleFavoriteClick}\r\n            >\r\n              <Heart\r\n                className={`h-4 w-4 ${isFavorite(car.id) ? \"fill-red-500 text-red-500\" : \"\"}`}\r\n              />\r\n            </Button>\r\n            <Button\r\n              variant=\"secondary\"\r\n              size=\"icon\"\r\n              className=\"h-8 w-8 bg-card/90 backdrop-blur-sm hover:bg-card\"\r\n              onClick={handleComparisonClick}\r\n            >\r\n              <GitCompare\r\n                className={`h-4 w-4 ${isInComparison(car.id) ? \"text-primary\" : \"\"}`}\r\n              />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <CardContent className=\"p-4\">\r\n          <h3 className=\"mb-2 text-lg font-semibold text-foreground line-clamp-1\">{car.title}</h3>\r\n          \r\n          <div className=\"mb-3 flex items-center gap-4 text-sm text-muted-foreground\">\r\n            <div className=\"flex items-center gap-1\">\r\n              <MapPin className=\"h-4 w-4\" />\r\n              <span className=\"line-clamp-1\">{car.location}</span>\r\n            </div>\r\n            <div className=\"flex items-center gap-1\">\r\n              <Gauge className=\"h-4 w-4\" />\r\n              <span>{car.mileage.toLocaleString()} mi</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <p className=\"text-2xl font-bold text-primary\">${car.price.toLocaleString()}</p>\r\n            <Badge variant={car.condition === \"new\" ? \"default\" : \"outline\"} className=\"capitalize\">\r\n              {car.condition}\r\n            </Badge>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default CarCard;"
        }
    ]
}