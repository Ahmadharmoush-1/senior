{
    "sourceFile": "src/pages/SellCar.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1759428067547,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1759428296925,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -321,9 +321,9 @@\n                     <Button variant=\"outline\" onClick={() => setStep(2)} className=\"w-full\">\r\n                       Back\r\n                     </Button>\r\n                     <Button\r\n-                      variant=\"accent\"\r\n+                      variant=\"default\"\r\n                       onClick={handleSubmit}\r\n                       className=\"w-full\"\r\n                       disabled={isSubmitting}\r\n                     >\r\n"
                },
                {
                    "date": 1759428304944,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,343 @@\n+import { useState, useEffect } from \"react\";\r\n+import { useNavigate } from \"react-router-dom\";\r\n+import { useAuth } from \"@/contexts/AuthContext\";\r\n+import { Button } from \"@/components/ui/button\";\r\n+import { Input } from \"@/components/ui/input\";\r\n+import { Label } from \"@/components/ui/label\";\r\n+import { Textarea } from \"@/components/ui/textarea\";\r\n+import { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\r\n+import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\n+import { Checkbox } from \"@/components/ui/checkbox\";\r\n+import { toast } from \"@/hooks/use-toast\";\r\n+import { ArrowLeft, Upload } from \"lucide-react\";\r\n+\r\n+const platforms = [\r\n+  { id: \"edmunds\", name: \"Edmunds\" },\r\n+  { id: \"olx\", name: \"OLX\" },\r\n+  { id: \"facebook\", name: \"Facebook Marketplace\" },\r\n+  { id: \"autotrader\", name: \"AutoTrader\" },\r\n+  { id: \"cars\", name: \"Cars.com\" },\r\n+];\r\n+\r\n+const SellCar = () => {\r\n+  const { user } = useAuth();\r\n+  const navigate = useNavigate();\r\n+  const [step, setStep] = useState(1);\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+\r\n+  const [formData, setFormData] = useState({\r\n+    brand: \"\",\r\n+    model: \"\",\r\n+    year: \"\",\r\n+    mileage: \"\",\r\n+    price: \"\",\r\n+    condition: \"\",\r\n+    description: \"\",\r\n+    location: \"\",\r\n+    platforms: [] as string[],\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    if (!user) {\r\n+      navigate(\"/auth?mode=login\");\r\n+    }\r\n+  }, [user, navigate]);\r\n+\r\n+  if (!user) {\r\n+    return null;\r\n+  }\r\n+\r\n+  const handleInputChange = (field: string, value: string) => {\r\n+    setFormData((prev) => ({ ...prev, [field]: value }));\r\n+  };\r\n+\r\n+  const handlePlatformToggle = (platformId: string) => {\r\n+    setFormData((prev) => ({\r\n+      ...prev,\r\n+      platforms: prev.platforms.includes(platformId)\r\n+        ? prev.platforms.filter((p) => p !== platformId)\r\n+        : [...prev.platforms, platformId],\r\n+    }));\r\n+  };\r\n+\r\n+  const handleNext = () => {\r\n+    if (step === 1) {\r\n+      if (!formData.brand || !formData.model || !formData.year || !formData.condition) {\r\n+        toast({\r\n+          title: \"Missing information\",\r\n+          description: \"Please fill in all required fields.\",\r\n+          variant: \"destructive\",\r\n+        });\r\n+        return;\r\n+      }\r\n+    }\r\n+    if (step === 2) {\r\n+      if (!formData.mileage || !formData.price || !formData.location) {\r\n+        toast({\r\n+          title: \"Missing information\",\r\n+          description: \"Please fill in all required fields.\",\r\n+          variant: \"destructive\",\r\n+        });\r\n+        return;\r\n+      }\r\n+    }\r\n+    setStep((prev) => prev + 1);\r\n+  };\r\n+\r\n+  const handleSubmit = async () => {\r\n+    if (!formData.description || formData.platforms.length === 0) {\r\n+      toast({\r\n+        title: \"Missing information\",\r\n+        description: \"Please complete all required fields.\",\r\n+        variant: \"destructive\",\r\n+      });\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    \r\n+    // Simulate API call\r\n+    await new Promise((resolve) => setTimeout(resolve, 2000));\r\n+    \r\n+    toast({\r\n+      title: \"Success!\",\r\n+      description: \"Your car has been listed successfully.\",\r\n+    });\r\n+    \r\n+    setIsSubmitting(false);\r\n+    navigate(\"/profile\");\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-background\">\r\n+      <div className=\"container mx-auto px-4 py-8\">\r\n+        <Button\r\n+          variant=\"ghost\"\r\n+          onClick={() => navigate(-1)}\r\n+          className=\"mb-6 gap-2\"\r\n+        >\r\n+          <ArrowLeft className=\"h-4 w-4\" />\r\n+          Back\r\n+        </Button>\r\n+\r\n+        <div className=\"mx-auto max-w-2xl\">\r\n+          <div className=\"mb-8 text-center\">\r\n+            <h1 className=\"text-4xl font-bold\">Sell Your Car</h1>\r\n+            <p className=\"mt-2 text-muted-foreground\">\r\n+              Step {step} of 3\r\n+            </p>\r\n+          </div>\r\n+\r\n+          {/* Progress Bar */}\r\n+          <div className=\"mb-8 flex gap-2\">\r\n+            {[1, 2, 3].map((s) => (\r\n+              <div\r\n+                key={s}\r\n+                className={`h-2 flex-1 rounded-full transition-smooth ${\r\n+                  s <= step ? \"bg-primary\" : \"bg-muted\"\r\n+                }`}\r\n+              />\r\n+            ))}\r\n+          </div>\r\n+\r\n+          <Card className=\"shadow-card\">\r\n+            {step === 1 && (\r\n+              <>\r\n+                <CardHeader>\r\n+                  <CardTitle>Car Details</CardTitle>\r\n+                  <CardDescription>\r\n+                    Tell us about your car\r\n+                  </CardDescription>\r\n+                </CardHeader>\r\n+                <CardContent className=\"space-y-4\">\r\n+                  <div className=\"grid gap-4 md:grid-cols-2\">\r\n+                    <div className=\"space-y-2\">\r\n+                      <Label htmlFor=\"brand\">Brand *</Label>\r\n+                      <Input\r\n+                        id=\"brand\"\r\n+                        placeholder=\"e.g., Toyota\"\r\n+                        value={formData.brand}\r\n+                        onChange={(e) => handleInputChange(\"brand\", e.target.value)}\r\n+                      />\r\n+                    </div>\r\n+                    <div className=\"space-y-2\">\r\n+                      <Label htmlFor=\"model\">Model *</Label>\r\n+                      <Input\r\n+                        id=\"model\"\r\n+                        placeholder=\"e.g., Camry\"\r\n+                        value={formData.model}\r\n+                        onChange={(e) => handleInputChange(\"model\", e.target.value)}\r\n+                      />\r\n+                    </div>\r\n+                  </div>\r\n+\r\n+                  <div className=\"grid gap-4 md:grid-cols-2\">\r\n+                    <div className=\"space-y-2\">\r\n+                      <Label htmlFor=\"year\">Year *</Label>\r\n+                      <Input\r\n+                        id=\"year\"\r\n+                        type=\"number\"\r\n+                        placeholder=\"2020\"\r\n+                        value={formData.year}\r\n+                        onChange={(e) => handleInputChange(\"year\", e.target.value)}\r\n+                      />\r\n+                    </div>\r\n+                    <div className=\"space-y-2\">\r\n+                      <Label htmlFor=\"condition\">Condition *</Label>\r\n+                      <Select\r\n+                        value={formData.condition}\r\n+                        onValueChange={(value) => handleInputChange(\"condition\", value)}\r\n+                      >\r\n+                        <SelectTrigger>\r\n+                          <SelectValue placeholder=\"Select condition\" />\r\n+                        </SelectTrigger>\r\n+                        <SelectContent>\r\n+                          <SelectItem value=\"new\">New</SelectItem>\r\n+                          <SelectItem value=\"used\">Used</SelectItem>\r\n+                          <SelectItem value=\"certified\">Certified Pre-Owned</SelectItem>\r\n+                        </SelectContent>\r\n+                      </Select>\r\n+                    </div>\r\n+                  </div>\r\n+\r\n+                  <Button variant=\"default\" onClick={handleNext} className=\"w-full\">\r\n+                    Continue\r\n+                  </Button>\r\n+                </CardContent>\r\n+              </>\r\n+            )}\r\n+\r\n+            {step === 2 && (\r\n+              <>\r\n+                <CardHeader>\r\n+                  <CardTitle>Pricing & Location</CardTitle>\r\n+                  <CardDescription>\r\n+                    Set your price and location\r\n+                  </CardDescription>\r\n+                </CardHeader>\r\n+                <CardContent className=\"space-y-4\">\r\n+                  <div className=\"grid gap-4 md:grid-cols-2\">\r\n+                    <div className=\"space-y-2\">\r\n+                      <Label htmlFor=\"price\">Price ($) *</Label>\r\n+                      <Input\r\n+                        id=\"price\"\r\n+                        type=\"number\"\r\n+                        placeholder=\"25000\"\r\n+                        value={formData.price}\r\n+                        onChange={(e) => handleInputChange(\"price\", e.target.value)}\r\n+                      />\r\n+                    </div>\r\n+                    <div className=\"space-y-2\">\r\n+                      <Label htmlFor=\"mileage\">Mileage (miles) *</Label>\r\n+                      <Input\r\n+                        id=\"mileage\"\r\n+                        type=\"number\"\r\n+                        placeholder=\"50000\"\r\n+                        value={formData.mileage}\r\n+                        onChange={(e) => handleInputChange(\"mileage\", e.target.value)}\r\n+                      />\r\n+                    </div>\r\n+                  </div>\r\n+\r\n+                  <div className=\"space-y-2\">\r\n+                    <Label htmlFor=\"location\">Location *</Label>\r\n+                    <Input\r\n+                      id=\"location\"\r\n+                      placeholder=\"City, State\"\r\n+                      value={formData.location}\r\n+                      onChange={(e) => handleInputChange(\"location\", e.target.value)}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"flex gap-2\">\r\n+                    <Button variant=\"outline\" onClick={() => setStep(1)} className=\"w-full\">\r\n+                      Back\r\n+                    </Button>\r\n+                    <Button variant=\"default\" onClick={handleNext} className=\"w-full\">\r\n+                      Continue\r\n+                    </Button>\r\n+                  </div>\r\n+                </CardContent>\r\n+              </>\r\n+            )}\r\n+\r\n+            {step === 3 && (\r\n+              <>\r\n+                <CardHeader>\r\n+                  <CardTitle>Description & Platforms</CardTitle>\r\n+                  <CardDescription>\r\n+                    Add details and choose where to list\r\n+                  </CardDescription>\r\n+                </CardHeader>\r\n+                <CardContent className=\"space-y-6\">\r\n+                  <div className=\"space-y-2\">\r\n+                    <Label htmlFor=\"description\">Description *</Label>\r\n+                    <Textarea\r\n+                      id=\"description\"\r\n+                      placeholder=\"Describe your car's features, condition, and history...\"\r\n+                      rows={4}\r\n+                      value={formData.description}\r\n+                      onChange={(e) => handleInputChange(\"description\", e.target.value)}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"space-y-3\">\r\n+                    <Label>List on Platforms *</Label>\r\n+                    <div className=\"space-y-3 rounded-lg border p-4\">\r\n+                      {platforms.map((platform) => (\r\n+                        <div key={platform.id} className=\"flex items-center space-x-2\">\r\n+                          <Checkbox\r\n+                            id={platform.id}\r\n+                            checked={formData.platforms.includes(platform.id)}\r\n+                            onCheckedChange={() => handlePlatformToggle(platform.id)}\r\n+                          />\r\n+                          <label\r\n+                            htmlFor={platform.id}\r\n+                            className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n+                          >\r\n+                            {platform.name}\r\n+                          </label>\r\n+                        </div>\r\n+                      ))}\r\n+                    </div>\r\n+                    <p className=\"text-xs text-muted-foreground\">\r\n+                      Select at least one platform to list your car\r\n+                    </p>\r\n+                  </div>\r\n+\r\n+                  <div className=\"space-y-2\">\r\n+                    <Label>Upload Images (Optional)</Label>\r\n+                    <div className=\"flex items-center justify-center rounded-lg border-2 border-dashed p-8 text-center transition-smooth hover:border-primary\">\r\n+                      <div>\r\n+                        <Upload className=\"mx-auto h-8 w-8 text-muted-foreground mb-2\" />\r\n+                        <p className=\"text-sm text-muted-foreground\">\r\n+                          Click to upload car images\r\n+                        </p>\r\n+                      </div>\r\n+                    </div>\r\n+                  </div>\r\n+\r\n+                  <div className=\"flex gap-2\">\r\n+                    <Button variant=\"outline\" onClick={() => setStep(2)} className=\"w-full\">\r\n+                      Back\r\n+                    </Button>\r\n+                    <Button\r\n+                      variant=\"default\"\r\n+                      onClick={handleSubmit}\r\n+                      className=\"w-full\"\r\n+                      disabled={isSubmitting}\r\n+                    >\r\n+                      {isSubmitting ? \"Listing...\" : \"List Car\"}\r\n+                    </Button>\r\n+                  </div>\r\n+                </CardContent>\r\n+              </>\r\n+            )}\r\n+          </Card>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default SellCar;\r\n"
                },
                {
                    "date": 1759939571943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,10 +7,11 @@\n import { Textarea } from \"@/components/ui/textarea\";\r\n import { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\r\n import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\n import { Checkbox } from \"@/components/ui/checkbox\";\r\n+import MapPicker from \"@/components/MapPicker\";\r\n import { toast } from \"@/hooks/use-toast\";\r\n-import { ArrowLeft, Upload } from \"lucide-react\";\r\n+import { ArrowLeft, Upload, MapPin, X } from \"lucide-react\";\r\n \r\n const platforms = [\r\n   { id: \"edmunds\", name: \"Edmunds\" },\r\n   { id: \"olx\", name: \"OLX\" },\r\n@@ -33,11 +34,15 @@\n     price: \"\",\r\n     condition: \"\",\r\n     description: \"\",\r\n     location: \"\",\r\n+    latitude: 0,\r\n+    longitude: 0,\r\n     platforms: [] as string[],\r\n   });\r\n \r\n+  const [selectedImages, setSelectedImages] = useState<string[]>([]);\r\n+\r\n   useEffect(() => {\r\n     if (!user) {\r\n       navigate(\"/auth?mode=login\");\r\n     }\r\n@@ -59,8 +64,33 @@\n         : [...prev.platforms, platformId],\r\n     }));\r\n   };\r\n \r\n+  const handleLocationSelect = (lat: number, lng: number, address: string) => {\r\n+    setFormData((prev) => ({\r\n+      ...prev,\r\n+      latitude: lat,\r\n+      longitude: lng,\r\n+      location: address,\r\n+    }));\r\n+  };\r\n+\r\n+  const handleImageUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n+    const files = e.target.files;\r\n+    if (files) {\r\n+      const newImages = Array.from(files).map((file) => URL.createObjectURL(file));\r\n+      setSelectedImages((prev) => [...prev, ...newImages]);\r\n+      toast({\r\n+        title: \"Images added\",\r\n+        description: `${files.length} image(s) ready for upload.`,\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const removeImage = (index: number) => {\r\n+    setSelectedImages((prev) => prev.filter((_, i) => i !== index));\r\n+  };\r\n+\r\n   const handleNext = () => {\r\n     if (step === 1) {\r\n       if (!formData.brand || !formData.model || !formData.year || !formData.condition) {\r\n         toast({\r\n@@ -199,9 +229,9 @@\n                       </Select>\r\n                     </div>\r\n                   </div>\r\n \r\n-                  <Button variant=\"default\" onClick={handleNext} className=\"w-full\">\r\n+                  <Button variant=\"accent\" onClick={handleNext} className=\"w-full\">\r\n                     Continue\r\n                   </Button>\r\n                 </CardContent>\r\n               </>\r\n@@ -238,23 +268,30 @@\n                       />\r\n                     </div>\r\n                   </div>\r\n \r\n-                  <div className=\"space-y-2\">\r\n-                    <Label htmlFor=\"location\">Location *</Label>\r\n-                    <Input\r\n-                      id=\"location\"\r\n-                      placeholder=\"City, State\"\r\n-                      value={formData.location}\r\n-                      onChange={(e) => handleInputChange(\"location\", e.target.value)}\r\n+                  <div className=\"space-y-3\">\r\n+                    <Label className=\"flex items-center gap-2\">\r\n+                      <MapPin className=\"h-4 w-4 text-primary\" />\r\n+                      Pick Location on Map *\r\n+                    </Label>\r\n+                    <MapPicker\r\n+                      onLocationSelect={handleLocationSelect}\r\n+                      initialLat={formData.latitude || 37.7749}\r\n+                      initialLng={formData.longitude || -122.4194}\r\n                     />\r\n+                    {formData.location && (\r\n+                      <p className=\"text-sm text-muted-foreground\">\r\n+                        Selected: {formData.location}\r\n+                      </p>\r\n+                    )}\r\n                   </div>\r\n \r\n                   <div className=\"flex gap-2\">\r\n                     <Button variant=\"outline\" onClick={() => setStep(1)} className=\"w-full\">\r\n                       Back\r\n                     </Button>\r\n-                    <Button variant=\"default\" onClick={handleNext} className=\"w-full\">\r\n+                    <Button variant=\"accent\" onClick={handleNext} className=\"w-full\">\r\n                       Continue\r\n                     </Button>\r\n                   </div>\r\n                 </CardContent>\r\n@@ -304,26 +341,63 @@\n                       Select at least one platform to list your car\r\n                     </p>\r\n                   </div>\r\n \r\n-                  <div className=\"space-y-2\">\r\n-                    <Label>Upload Images (Optional)</Label>\r\n-                    <div className=\"flex items-center justify-center rounded-lg border-2 border-dashed p-8 text-center transition-smooth hover:border-primary\">\r\n-                      <div>\r\n-                        <Upload className=\"mx-auto h-8 w-8 text-muted-foreground mb-2\" />\r\n-                        <p className=\"text-sm text-muted-foreground\">\r\n-                          Click to upload car images\r\n-                        </p>\r\n-                      </div>\r\n+                  <div className=\"space-y-3\">\r\n+                    <Label>Upload Images</Label>\r\n+                    <div className=\"space-y-3\">\r\n+                      <label\r\n+                        htmlFor=\"image-upload\"\r\n+                        className=\"flex cursor-pointer items-center justify-center rounded-lg border-2 border-dashed p-8 text-center transition-smooth hover:border-primary hover:bg-primary/5\"\r\n+                      >\r\n+                        <div>\r\n+                          <Upload className=\"mx-auto h-8 w-8 text-muted-foreground mb-2\" />\r\n+                          <p className=\"text-sm font-medium text-muted-foreground\">\r\n+                            Click to upload car images\r\n+                          </p>\r\n+                          <p className=\"text-xs text-muted-foreground mt-1\">\r\n+                            Upload up to 10 images (JPG, PNG)\r\n+                          </p>\r\n+                        </div>\r\n+                      </label>\r\n+                      <input\r\n+                        id=\"image-upload\"\r\n+                        type=\"file\"\r\n+                        accept=\"image/*\"\r\n+                        multiple\r\n+                        className=\"hidden\"\r\n+                        onChange={handleImageUpload}\r\n+                      />\r\n+\r\n+                      {selectedImages.length > 0 && (\r\n+                        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3\">\r\n+                          {selectedImages.map((img, index) => (\r\n+                            <div key={index} className=\"relative group animate-scale-in\">\r\n+                              <img\r\n+                                src={img}\r\n+                                alt={`Preview ${index + 1}`}\r\n+                                className=\"h-24 w-full rounded-lg object-cover\"\r\n+                              />\r\n+                              <button\r\n+                                type=\"button\"\r\n+                                onClick={() => removeImage(index)}\r\n+                                className=\"absolute -right-2 -top-2 flex h-6 w-6 items-center justify-center rounded-full bg-destructive text-white opacity-0 group-hover:opacity-100 transition-smooth\"\r\n+                              >\r\n+                                <X className=\"h-4 w-4\" />\r\n+                              </button>\r\n+                            </div>\r\n+                          ))}\r\n+                        </div>\r\n+                      )}\r\n                     </div>\r\n                   </div>\r\n \r\n                   <div className=\"flex gap-2\">\r\n                     <Button variant=\"outline\" onClick={() => setStep(2)} className=\"w-full\">\r\n                       Back\r\n                     </Button>\r\n                     <Button\r\n-                      variant=\"default\"\r\n+                      variant=\"accent\"\r\n                       onClick={handleSubmit}\r\n                       className=\"w-full\"\r\n                       disabled={isSubmitting}\r\n                     >\r\n"
                },
                {
                    "date": 1759939580506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -229,9 +229,9 @@\n                       </Select>\r\n                     </div>\r\n                   </div>\r\n \r\n-                  <Button variant=\"accent\" onClick={handleNext} className=\"w-full\">\r\n+                  <Button variant=\"default\" onClick={handleNext} className=\"w-full\">\r\n                     Continue\r\n                   </Button>\r\n                 </CardContent>\r\n               </>\r\n@@ -414,347 +414,4 @@\n   );\r\n };\r\n \r\n export default SellCar;\r\n-import { useState, useEffect } from \"react\";\r\n-import { useNavigate } from \"react-router-dom\";\r\n-import { useAuth } from \"@/contexts/AuthContext\";\r\n-import { Button } from \"@/components/ui/button\";\r\n-import { Input } from \"@/components/ui/input\";\r\n-import { Label } from \"@/components/ui/label\";\r\n-import { Textarea } from \"@/components/ui/textarea\";\r\n-import { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\r\n-import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\n-import { Checkbox } from \"@/components/ui/checkbox\";\r\n-import { toast } from \"@/hooks/use-toast\";\r\n-import { ArrowLeft, Upload } from \"lucide-react\";\r\n-\r\n-const platforms = [\r\n-  { id: \"edmunds\", name: \"Edmunds\" },\r\n-  { id: \"olx\", name: \"OLX\" },\r\n-  { id: \"facebook\", name: \"Facebook Marketplace\" },\r\n-  { id: \"autotrader\", name: \"AutoTrader\" },\r\n-  { id: \"cars\", name: \"Cars.com\" },\r\n-];\r\n-\r\n-const SellCar = () => {\r\n-  const { user } = useAuth();\r\n-  const navigate = useNavigate();\r\n-  const [step, setStep] = useState(1);\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-\r\n-  const [formData, setFormData] = useState({\r\n-    brand: \"\",\r\n-    model: \"\",\r\n-    year: \"\",\r\n-    mileage: \"\",\r\n-    price: \"\",\r\n-    condition: \"\",\r\n-    description: \"\",\r\n-    location: \"\",\r\n-    platforms: [] as string[],\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    if (!user) {\r\n-      navigate(\"/auth?mode=login\");\r\n-    }\r\n-  }, [user, navigate]);\r\n-\r\n-  if (!user) {\r\n-    return null;\r\n-  }\r\n-\r\n-  const handleInputChange = (field: string, value: string) => {\r\n-    setFormData((prev) => ({ ...prev, [field]: value }));\r\n-  };\r\n-\r\n-  const handlePlatformToggle = (platformId: string) => {\r\n-    setFormData((prev) => ({\r\n-      ...prev,\r\n-      platforms: prev.platforms.includes(platformId)\r\n-        ? prev.platforms.filter((p) => p !== platformId)\r\n-        : [...prev.platforms, platformId],\r\n-    }));\r\n-  };\r\n-\r\n-  const handleNext = () => {\r\n-    if (step === 1) {\r\n-      if (!formData.brand || !formData.model || !formData.year || !formData.condition) {\r\n-        toast({\r\n-          title: \"Missing information\",\r\n-          description: \"Please fill in all required fields.\",\r\n-          variant: \"destructive\",\r\n-        });\r\n-        return;\r\n-      }\r\n-    }\r\n-    if (step === 2) {\r\n-      if (!formData.mileage || !formData.price || !formData.location) {\r\n-        toast({\r\n-          title: \"Missing information\",\r\n-          description: \"Please fill in all required fields.\",\r\n-          variant: \"destructive\",\r\n-        });\r\n-        return;\r\n-      }\r\n-    }\r\n-    setStep((prev) => prev + 1);\r\n-  };\r\n-\r\n-  const handleSubmit = async () => {\r\n-    if (!formData.description || formData.platforms.length === 0) {\r\n-      toast({\r\n-        title: \"Missing information\",\r\n-        description: \"Please complete all required fields.\",\r\n-        variant: \"destructive\",\r\n-      });\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    \r\n-    // Simulate API call\r\n-    await new Promise((resolve) => setTimeout(resolve, 2000));\r\n-    \r\n-    toast({\r\n-      title: \"Success!\",\r\n-      description: \"Your car has been listed successfully.\",\r\n-    });\r\n-    \r\n-    setIsSubmitting(false);\r\n-    navigate(\"/profile\");\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen bg-background\">\r\n-      <div className=\"container mx-auto px-4 py-8\">\r\n-        <Button\r\n-          variant=\"ghost\"\r\n-          onClick={() => navigate(-1)}\r\n-          className=\"mb-6 gap-2\"\r\n-        >\r\n-          <ArrowLeft className=\"h-4 w-4\" />\r\n-          Back\r\n-        </Button>\r\n-\r\n-        <div className=\"mx-auto max-w-2xl\">\r\n-          <div className=\"mb-8 text-center\">\r\n-            <h1 className=\"text-4xl font-bold\">Sell Your Car</h1>\r\n-            <p className=\"mt-2 text-muted-foreground\">\r\n-              Step {step} of 3\r\n-            </p>\r\n-          </div>\r\n-\r\n-          {/* Progress Bar */}\r\n-          <div className=\"mb-8 flex gap-2\">\r\n-            {[1, 2, 3].map((s) => (\r\n-              <div\r\n-                key={s}\r\n-                className={`h-2 flex-1 rounded-full transition-smooth ${\r\n-                  s <= step ? \"bg-primary\" : \"bg-muted\"\r\n-                }`}\r\n-              />\r\n-            ))}\r\n-          </div>\r\n-\r\n-          <Card className=\"shadow-card\">\r\n-            {step === 1 && (\r\n-              <>\r\n-                <CardHeader>\r\n-                  <CardTitle>Car Details</CardTitle>\r\n-                  <CardDescription>\r\n-                    Tell us about your car\r\n-                  </CardDescription>\r\n-                </CardHeader>\r\n-                <CardContent className=\"space-y-4\">\r\n-                  <div className=\"grid gap-4 md:grid-cols-2\">\r\n-                    <div className=\"space-y-2\">\r\n-                      <Label htmlFor=\"brand\">Brand *</Label>\r\n-                      <Input\r\n-                        id=\"brand\"\r\n-                        placeholder=\"e.g., Toyota\"\r\n-                        value={formData.brand}\r\n-                        onChange={(e) => handleInputChange(\"brand\", e.target.value)}\r\n-                      />\r\n-                    </div>\r\n-                    <div className=\"space-y-2\">\r\n-                      <Label htmlFor=\"model\">Model *</Label>\r\n-                      <Input\r\n-                        id=\"model\"\r\n-                        placeholder=\"e.g., Camry\"\r\n-                        value={formData.model}\r\n-                        onChange={(e) => handleInputChange(\"model\", e.target.value)}\r\n-                      />\r\n-                    </div>\r\n-                  </div>\r\n-\r\n-                  <div className=\"grid gap-4 md:grid-cols-2\">\r\n-                    <div className=\"space-y-2\">\r\n-                      <Label htmlFor=\"year\">Year *</Label>\r\n-                      <Input\r\n-                        id=\"year\"\r\n-                        type=\"number\"\r\n-                        placeholder=\"2020\"\r\n-                        value={formData.year}\r\n-                        onChange={(e) => handleInputChange(\"year\", e.target.value)}\r\n-                      />\r\n-                    </div>\r\n-                    <div className=\"space-y-2\">\r\n-                      <Label htmlFor=\"condition\">Condition *</Label>\r\n-                      <Select\r\n-                        value={formData.condition}\r\n-                        onValueChange={(value) => handleInputChange(\"condition\", value)}\r\n-                      >\r\n-                        <SelectTrigger>\r\n-                          <SelectValue placeholder=\"Select condition\" />\r\n-                        </SelectTrigger>\r\n-                        <SelectContent>\r\n-                          <SelectItem value=\"new\">New</SelectItem>\r\n-                          <SelectItem value=\"used\">Used</SelectItem>\r\n-                          <SelectItem value=\"certified\">Certified Pre-Owned</SelectItem>\r\n-                        </SelectContent>\r\n-                      </Select>\r\n-                    </div>\r\n-                  </div>\r\n-\r\n-                  <Button variant=\"accent\" onClick={handleNext} className=\"w-full\">\r\n-                    Continue\r\n-                  </Button>\r\n-                </CardContent>\r\n-              </>\r\n-            )}\r\n-\r\n-            {step === 2 && (\r\n-              <>\r\n-                <CardHeader>\r\n-                  <CardTitle>Pricing & Location</CardTitle>\r\n-                  <CardDescription>\r\n-                    Set your price and location\r\n-                  </CardDescription>\r\n-                </CardHeader>\r\n-                <CardContent className=\"space-y-4\">\r\n-                  <div className=\"grid gap-4 md:grid-cols-2\">\r\n-                    <div className=\"space-y-2\">\r\n-                      <Label htmlFor=\"price\">Price ($) *</Label>\r\n-                      <Input\r\n-                        id=\"price\"\r\n-                        type=\"number\"\r\n-                        placeholder=\"25000\"\r\n-                        value={formData.price}\r\n-                        onChange={(e) => handleInputChange(\"price\", e.target.value)}\r\n-                      />\r\n-                    </div>\r\n-                    <div className=\"space-y-2\">\r\n-                      <Label htmlFor=\"mileage\">Mileage (miles) *</Label>\r\n-                      <Input\r\n-                        id=\"mileage\"\r\n-                        type=\"number\"\r\n-                        placeholder=\"50000\"\r\n-                        value={formData.mileage}\r\n-                        onChange={(e) => handleInputChange(\"mileage\", e.target.value)}\r\n-                      />\r\n-                    </div>\r\n-                  </div>\r\n-\r\n-                  <div className=\"space-y-2\">\r\n-                    <Label htmlFor=\"location\">Location *</Label>\r\n-                    <Input\r\n-                      id=\"location\"\r\n-                      placeholder=\"City, State\"\r\n-                      value={formData.location}\r\n-                      onChange={(e) => handleInputChange(\"location\", e.target.value)}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  <div className=\"flex gap-2\">\r\n-                    <Button variant=\"outline\" onClick={() => setStep(1)} className=\"w-full\">\r\n-                      Back\r\n-                    </Button>\r\n-                    <Button variant=\"accent\" onClick={handleNext} className=\"w-full\">\r\n-                      Continue\r\n-                    </Button>\r\n-                  </div>\r\n-                </CardContent>\r\n-              </>\r\n-            )}\r\n-\r\n-            {step === 3 && (\r\n-              <>\r\n-                <CardHeader>\r\n-                  <CardTitle>Description & Platforms</CardTitle>\r\n-                  <CardDescription>\r\n-                    Add details and choose where to list\r\n-                  </CardDescription>\r\n-                </CardHeader>\r\n-                <CardContent className=\"space-y-6\">\r\n-                  <div className=\"space-y-2\">\r\n-                    <Label htmlFor=\"description\">Description *</Label>\r\n-                    <Textarea\r\n-                      id=\"description\"\r\n-                      placeholder=\"Describe your car's features, condition, and history...\"\r\n-                      rows={4}\r\n-                      value={formData.description}\r\n-                      onChange={(e) => handleInputChange(\"description\", e.target.value)}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  <div className=\"space-y-3\">\r\n-                    <Label>List on Platforms *</Label>\r\n-                    <div className=\"space-y-3 rounded-lg border p-4\">\r\n-                      {platforms.map((platform) => (\r\n-                        <div key={platform.id} className=\"flex items-center space-x-2\">\r\n-                          <Checkbox\r\n-                            id={platform.id}\r\n-                            checked={formData.platforms.includes(platform.id)}\r\n-                            onCheckedChange={() => handlePlatformToggle(platform.id)}\r\n-                          />\r\n-                          <label\r\n-                            htmlFor={platform.id}\r\n-                            className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n-                          >\r\n-                            {platform.name}\r\n-                          </label>\r\n-                        </div>\r\n-                      ))}\r\n-                    </div>\r\n-                    <p className=\"text-xs text-muted-foreground\">\r\n-                      Select at least one platform to list your car\r\n-                    </p>\r\n-                  </div>\r\n-\r\n-                  <div className=\"space-y-2\">\r\n-                    <Label>Upload Images (Optional)</Label>\r\n-                    <div className=\"flex items-center justify-center rounded-lg border-2 border-dashed p-8 text-center transition-smooth hover:border-primary\">\r\n-                      <div>\r\n-                        <Upload className=\"mx-auto h-8 w-8 text-muted-foreground mb-2\" />\r\n-                        <p className=\"text-sm text-muted-foreground\">\r\n-                          Click to upload car images\r\n-                        </p>\r\n-                      </div>\r\n-                    </div>\r\n-                  </div>\r\n-\r\n-                  <div className=\"flex gap-2\">\r\n-                    <Button variant=\"outline\" onClick={() => setStep(2)} className=\"w-full\">\r\n-                      Back\r\n-                    </Button>\r\n-                    <Button\r\n-                      variant=\"default\"\r\n-                      onClick={handleSubmit}\r\n-                      className=\"w-full\"\r\n-                      disabled={isSubmitting}\r\n-                    >\r\n-                      {isSubmitting ? \"Listing...\" : \"List Car\"}\r\n-                    </Button>\r\n-                  </div>\r\n-                </CardContent>\r\n-              </>\r\n-            )}\r\n-          </Card>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default SellCar;\r\n"
                },
                {
                    "date": 1759939586806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -289,9 +289,9 @@\n                   <div className=\"flex gap-2\">\r\n                     <Button variant=\"outline\" onClick={() => setStep(1)} className=\"w-full\">\r\n                       Back\r\n                     </Button>\r\n-                    <Button variant=\"accent\" onClick={handleNext} className=\"w-full\">\r\n+                    <Button variant=\"default\" onClick={handleNext} className=\"w-full\">\r\n                       Continue\r\n                     </Button>\r\n                   </div>\r\n                 </CardContent>\r\n"
                },
                {
                    "date": 1759939592072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -395,9 +395,9 @@\n                     <Button variant=\"outline\" onClick={() => setStep(2)} className=\"w-full\">\r\n                       Back\r\n                     </Button>\r\n                     <Button\r\n-                      variant=\"accent\"\r\n+                      variant=\"default\"\r\n                       onClick={handleSubmit}\r\n                       className=\"w-full\"\r\n                       disabled={isSubmitting}\r\n                     >\r\n"
                }
            ],
            "date": 1759428067547,
            "name": "Commit-0",
            "content": "import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"@/contexts/AuthContext\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { Checkbox } from \"@/components/ui/checkbox\";\r\nimport { toast } from \"@/hooks/use-toast\";\r\nimport { ArrowLeft, Upload } from \"lucide-react\";\r\n\r\nconst platforms = [\r\n  { id: \"edmunds\", name: \"Edmunds\" },\r\n  { id: \"olx\", name: \"OLX\" },\r\n  { id: \"facebook\", name: \"Facebook Marketplace\" },\r\n  { id: \"autotrader\", name: \"AutoTrader\" },\r\n  { id: \"cars\", name: \"Cars.com\" },\r\n];\r\n\r\nconst SellCar = () => {\r\n  const { user } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [step, setStep] = useState(1);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const [formData, setFormData] = useState({\r\n    brand: \"\",\r\n    model: \"\",\r\n    year: \"\",\r\n    mileage: \"\",\r\n    price: \"\",\r\n    condition: \"\",\r\n    description: \"\",\r\n    location: \"\",\r\n    platforms: [] as string[],\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      navigate(\"/auth?mode=login\");\r\n    }\r\n  }, [user, navigate]);\r\n\r\n  if (!user) {\r\n    return null;\r\n  }\r\n\r\n  const handleInputChange = (field: string, value: string) => {\r\n    setFormData((prev) => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  const handlePlatformToggle = (platformId: string) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      platforms: prev.platforms.includes(platformId)\r\n        ? prev.platforms.filter((p) => p !== platformId)\r\n        : [...prev.platforms, platformId],\r\n    }));\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (step === 1) {\r\n      if (!formData.brand || !formData.model || !formData.year || !formData.condition) {\r\n        toast({\r\n          title: \"Missing information\",\r\n          description: \"Please fill in all required fields.\",\r\n          variant: \"destructive\",\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    if (step === 2) {\r\n      if (!formData.mileage || !formData.price || !formData.location) {\r\n        toast({\r\n          title: \"Missing information\",\r\n          description: \"Please fill in all required fields.\",\r\n          variant: \"destructive\",\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    setStep((prev) => prev + 1);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!formData.description || formData.platforms.length === 0) {\r\n      toast({\r\n        title: \"Missing information\",\r\n        description: \"Please complete all required fields.\",\r\n        variant: \"destructive\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    \r\n    // Simulate API call\r\n    await new Promise((resolve) => setTimeout(resolve, 2000));\r\n    \r\n    toast({\r\n      title: \"Success!\",\r\n      description: \"Your car has been listed successfully.\",\r\n    });\r\n    \r\n    setIsSubmitting(false);\r\n    navigate(\"/profile\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-background\">\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <Button\r\n          variant=\"ghost\"\r\n          onClick={() => navigate(-1)}\r\n          className=\"mb-6 gap-2\"\r\n        >\r\n          <ArrowLeft className=\"h-4 w-4\" />\r\n          Back\r\n        </Button>\r\n\r\n        <div className=\"mx-auto max-w-2xl\">\r\n          <div className=\"mb-8 text-center\">\r\n            <h1 className=\"text-4xl font-bold\">Sell Your Car</h1>\r\n            <p className=\"mt-2 text-muted-foreground\">\r\n              Step {step} of 3\r\n            </p>\r\n          </div>\r\n\r\n          {/* Progress Bar */}\r\n          <div className=\"mb-8 flex gap-2\">\r\n            {[1, 2, 3].map((s) => (\r\n              <div\r\n                key={s}\r\n                className={`h-2 flex-1 rounded-full transition-smooth ${\r\n                  s <= step ? \"bg-primary\" : \"bg-muted\"\r\n                }`}\r\n              />\r\n            ))}\r\n          </div>\r\n\r\n          <Card className=\"shadow-card\">\r\n            {step === 1 && (\r\n              <>\r\n                <CardHeader>\r\n                  <CardTitle>Car Details</CardTitle>\r\n                  <CardDescription>\r\n                    Tell us about your car\r\n                  </CardDescription>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-4\">\r\n                  <div className=\"grid gap-4 md:grid-cols-2\">\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"brand\">Brand *</Label>\r\n                      <Input\r\n                        id=\"brand\"\r\n                        placeholder=\"e.g., Toyota\"\r\n                        value={formData.brand}\r\n                        onChange={(e) => handleInputChange(\"brand\", e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"model\">Model *</Label>\r\n                      <Input\r\n                        id=\"model\"\r\n                        placeholder=\"e.g., Camry\"\r\n                        value={formData.model}\r\n                        onChange={(e) => handleInputChange(\"model\", e.target.value)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"grid gap-4 md:grid-cols-2\">\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"year\">Year *</Label>\r\n                      <Input\r\n                        id=\"year\"\r\n                        type=\"number\"\r\n                        placeholder=\"2020\"\r\n                        value={formData.year}\r\n                        onChange={(e) => handleInputChange(\"year\", e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"condition\">Condition *</Label>\r\n                      <Select\r\n                        value={formData.condition}\r\n                        onValueChange={(value) => handleInputChange(\"condition\", value)}\r\n                      >\r\n                        <SelectTrigger>\r\n                          <SelectValue placeholder=\"Select condition\" />\r\n                        </SelectTrigger>\r\n                        <SelectContent>\r\n                          <SelectItem value=\"new\">New</SelectItem>\r\n                          <SelectItem value=\"used\">Used</SelectItem>\r\n                          <SelectItem value=\"certified\">Certified Pre-Owned</SelectItem>\r\n                        </SelectContent>\r\n                      </Select>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <Button variant=\"accent\" onClick={handleNext} className=\"w-full\">\r\n                    Continue\r\n                  </Button>\r\n                </CardContent>\r\n              </>\r\n            )}\r\n\r\n            {step === 2 && (\r\n              <>\r\n                <CardHeader>\r\n                  <CardTitle>Pricing & Location</CardTitle>\r\n                  <CardDescription>\r\n                    Set your price and location\r\n                  </CardDescription>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-4\">\r\n                  <div className=\"grid gap-4 md:grid-cols-2\">\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"price\">Price ($) *</Label>\r\n                      <Input\r\n                        id=\"price\"\r\n                        type=\"number\"\r\n                        placeholder=\"25000\"\r\n                        value={formData.price}\r\n                        onChange={(e) => handleInputChange(\"price\", e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"mileage\">Mileage (miles) *</Label>\r\n                      <Input\r\n                        id=\"mileage\"\r\n                        type=\"number\"\r\n                        placeholder=\"50000\"\r\n                        value={formData.mileage}\r\n                        onChange={(e) => handleInputChange(\"mileage\", e.target.value)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"location\">Location *</Label>\r\n                    <Input\r\n                      id=\"location\"\r\n                      placeholder=\"City, State\"\r\n                      value={formData.location}\r\n                      onChange={(e) => handleInputChange(\"location\", e.target.value)}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"flex gap-2\">\r\n                    <Button variant=\"outline\" onClick={() => setStep(1)} className=\"w-full\">\r\n                      Back\r\n                    </Button>\r\n                    <Button variant=\"accent\" onClick={handleNext} className=\"w-full\">\r\n                      Continue\r\n                    </Button>\r\n                  </div>\r\n                </CardContent>\r\n              </>\r\n            )}\r\n\r\n            {step === 3 && (\r\n              <>\r\n                <CardHeader>\r\n                  <CardTitle>Description & Platforms</CardTitle>\r\n                  <CardDescription>\r\n                    Add details and choose where to list\r\n                  </CardDescription>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-6\">\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"description\">Description *</Label>\r\n                    <Textarea\r\n                      id=\"description\"\r\n                      placeholder=\"Describe your car's features, condition, and history...\"\r\n                      rows={4}\r\n                      value={formData.description}\r\n                      onChange={(e) => handleInputChange(\"description\", e.target.value)}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"space-y-3\">\r\n                    <Label>List on Platforms *</Label>\r\n                    <div className=\"space-y-3 rounded-lg border p-4\">\r\n                      {platforms.map((platform) => (\r\n                        <div key={platform.id} className=\"flex items-center space-x-2\">\r\n                          <Checkbox\r\n                            id={platform.id}\r\n                            checked={formData.platforms.includes(platform.id)}\r\n                            onCheckedChange={() => handlePlatformToggle(platform.id)}\r\n                          />\r\n                          <label\r\n                            htmlFor={platform.id}\r\n                            className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n                          >\r\n                            {platform.name}\r\n                          </label>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                    <p className=\"text-xs text-muted-foreground\">\r\n                      Select at least one platform to list your car\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-2\">\r\n                    <Label>Upload Images (Optional)</Label>\r\n                    <div className=\"flex items-center justify-center rounded-lg border-2 border-dashed p-8 text-center transition-smooth hover:border-primary\">\r\n                      <div>\r\n                        <Upload className=\"mx-auto h-8 w-8 text-muted-foreground mb-2\" />\r\n                        <p className=\"text-sm text-muted-foreground\">\r\n                          Click to upload car images\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"flex gap-2\">\r\n                    <Button variant=\"outline\" onClick={() => setStep(2)} className=\"w-full\">\r\n                      Back\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"accent\"\r\n                      onClick={handleSubmit}\r\n                      className=\"w-full\"\r\n                      disabled={isSubmitting}\r\n                    >\r\n                      {isSubmitting ? \"Listing...\" : \"List Car\"}\r\n                    </Button>\r\n                  </div>\r\n                </CardContent>\r\n              </>\r\n            )}\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SellCar;\r\n"
        }
    ]
}