{
    "sourceFile": "src/pages/Auth.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1759428007971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1759428254477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,9 +143,9 @@\n             </div>\r\n \r\n             <Button\r\n               type=\"submit\"\r\n-              variant=\"accent\"\r\n+              variant=\"default\"\r\n               className=\"w-full\"\r\n               size=\"lg\"\r\n               disabled={isLoading}\r\n             >\r\n"
                },
                {
                    "date": 1759939523258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,336 @@\n+import { useState, useEffect } from \"react\";\r\n+import { useNavigate, useSearchParams } from \"react-router-dom\";\r\n+import { useAuth } from \"@/contexts/AuthContext\";\r\n+import { Button } from \"@/components/ui/button\";\r\n+import { Input } from \"@/components/ui/input\";\r\n+import { Label } from \"@/components/ui/label\";\r\n+import { Checkbox } from \"@/components/ui/checkbox\";\r\n+import PasswordInput from \"@/components/PasswordInput\";\r\n+import SocialLoginButtons from \"@/components/SocialLoginButtons\";\r\n+import { Car, Eye, EyeOff } from \"lucide-react\";\r\n+import { toast } from \"@/hooks/use-toast\";\r\n+import { passwordSchema } from \"@/lib/validation\";\r\n+import authHero from \"@/assets/auth-hero.jpg\";\r\n+\r\n+const Auth = () => {\r\n+  const [searchParams] = useSearchParams();\r\n+  const mode = searchParams.get(\"mode\") || \"login\";\r\n+  const [isLogin, setIsLogin] = useState(mode === \"login\");\r\n+  const [name, setName] = useState(\"\");\r\n+  const [email, setEmail] = useState(\"\");\r\n+  const [password, setPassword] = useState(\"\");\r\n+  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n+  const [rememberMe, setRememberMe] = useState(false);\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n+  const [isLoading, setIsLoading] = useState(false);\r\n+  \r\n+  const { login, register, user } = useAuth();\r\n+  const navigate = useNavigate();\r\n+\r\n+  useEffect(() => {\r\n+    if (user) {\r\n+      navigate(\"/\");\r\n+    }\r\n+  }, [user, navigate]);\r\n+\r\n+  useEffect(() => {\r\n+    setIsLogin(mode === \"login\");\r\n+  }, [mode]);\r\n+\r\n+  const handleSubmit = async (e: React.FormEvent) => {\r\n+    e.preventDefault();\r\n+    setIsLoading(true);\r\n+\r\n+    try {\r\n+      // Validate email\r\n+      if (!email.includes(\"@\")) {\r\n+        toast({\r\n+          title: \"Invalid email\",\r\n+          description: \"Please enter a valid email address.\",\r\n+          variant: \"destructive\",\r\n+        });\r\n+        setIsLoading(false);\r\n+        return;\r\n+      }\r\n+\r\n+      // Validate password strength for signup\r\n+      if (!isLogin) {\r\n+        const passwordValidation = passwordSchema.safeParse(password);\r\n+        if (!passwordValidation.success) {\r\n+          toast({\r\n+            title: \"Weak password\",\r\n+            description: passwordValidation.error.issues[0].message,\r\n+            variant: \"destructive\",\r\n+          });\r\n+          setIsLoading(false);\r\n+          return;\r\n+        }\r\n+\r\n+        // Check password match\r\n+        if (password !== confirmPassword) {\r\n+          toast({\r\n+            title: \"Passwords don't match\",\r\n+            description: \"Please make sure your passwords match.\",\r\n+            variant: \"destructive\",\r\n+          });\r\n+          setIsLoading(false);\r\n+          return;\r\n+        }\r\n+      }\r\n+\r\n+      if (isLogin) {\r\n+        await login(email, password);\r\n+        toast({\r\n+          title: \"Welcome back!\",\r\n+          description: \"You've successfully logged in.\",\r\n+        });\r\n+      } else {\r\n+        if (!name.trim()) {\r\n+          toast({\r\n+            title: \"Name required\",\r\n+            description: \"Please enter your full name.\",\r\n+            variant: \"destructive\",\r\n+          });\r\n+          setIsLoading(false);\r\n+          return;\r\n+        }\r\n+        await register(name, email, password);\r\n+        toast({\r\n+          title: \"Account created!\",\r\n+          description: \"Welcome to CarFinder Hub.\",\r\n+        });\r\n+      }\r\n+      navigate(\"/\");\r\n+    } catch (error) {\r\n+      toast({\r\n+        title: \"Error\",\r\n+        description: \"Something went wrong. Please try again.\",\r\n+        variant: \"destructive\",\r\n+      });\r\n+    } finally {\r\n+      setIsLoading(false);\r\n+    }\r\n+  };\r\n+\r\n+  const passwordsMatch = !isLogin && password && confirmPassword && password === confirmPassword;\r\n+  const passwordsDontMatch = !isLogin && password && confirmPassword && password !== confirmPassword;\r\n+\r\n+  return (\r\n+    <div className=\"flex min-h-screen\">\r\n+      {/* Left side - Hero Image */}\r\n+      <div className=\"hidden lg:flex lg:w-1/2 relative overflow-hidden\">\r\n+        <div className=\"absolute inset-0 bg-gradient-to-br from-primary/20 to-accent/20 z-10\" />\r\n+        <img\r\n+          src={authHero}\r\n+          alt=\"CarFinder Hub\"\r\n+          className=\"absolute inset-0 h-full w-full object-cover\"\r\n+        />\r\n+        <div className=\"relative z-20 flex flex-col justify-center px-12 text-white\">\r\n+          <div className=\"space-y-6 animate-fade-in\">\r\n+            <div className=\"flex items-center gap-3\">\r\n+              <div className=\"flex h-12 w-12 items-center justify-center rounded-full bg-white/20 backdrop-blur-sm\">\r\n+                <Car className=\"h-6 w-6\" />\r\n+              </div>\r\n+              <h1 className=\"text-3xl font-bold\">CarFinder Hub</h1>\r\n+            </div>\r\n+            <p className=\"text-xl font-medium\">\r\n+              Find and list cars across platforms – all in one hub.\r\n+            </p>\r\n+            <p className=\"text-lg text-white/90\">\r\n+              Connect with buyers and sellers on Edmunds, OLX, Facebook Marketplace, and more.\r\n+            </p>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Right side - Auth Form */}\r\n+      <div className=\"flex w-full items-center justify-center bg-background p-4 lg:w-1/2\">\r\n+        <div className=\"w-full max-w-md space-y-8 animate-fade-in\">\r\n+          {/* Mobile Logo */}\r\n+          <div className=\"flex items-center justify-center gap-3 lg:hidden\">\r\n+            <div className=\"flex h-12 w-12 items-center justify-center rounded-full bg-primary/10\">\r\n+              <Car className=\"h-6 w-6 text-primary\" />\r\n+            </div>\r\n+            <h1 className=\"text-2xl font-bold\">CarFinder Hub</h1>\r\n+          </div>\r\n+\r\n+          <div className=\"text-center\">\r\n+            <h2 className=\"text-3xl font-bold tracking-tight\">\r\n+              {isLogin ? \"Welcome Back\" : \"Create Account\"}\r\n+            </h2>\r\n+            <p className=\"mt-2 text-muted-foreground\">\r\n+              {isLogin\r\n+                ? \"Enter your credentials to access your account\"\r\n+                : \"Sign up to start finding your perfect car\"}\r\n+            </p>\r\n+          </div>\r\n+\r\n+          <form onSubmit={handleSubmit} className=\"space-y-5\">\r\n+            {!isLogin && (\r\n+              <div className=\"space-y-2\">\r\n+                <Label htmlFor=\"name\">Full Name</Label>\r\n+                <Input\r\n+                  id=\"name\"\r\n+                  type=\"text\"\r\n+                  placeholder=\"John Doe\"\r\n+                  value={name}\r\n+                  onChange={(e) => setName(e.target.value)}\r\n+                  required={!isLogin}\r\n+                  className=\"transition-smooth\"\r\n+                />\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"space-y-2\">\r\n+              <Label htmlFor=\"email\">Email Address</Label>\r\n+              <Input\r\n+                id=\"email\"\r\n+                type=\"email\"\r\n+                placeholder=\"you@example.com\"\r\n+                value={email}\r\n+                onChange={(e) => setEmail(e.target.value)}\r\n+                required\r\n+                className=\"transition-smooth\"\r\n+              />\r\n+            </div>\r\n+\r\n+            <div className=\"space-y-2\">\r\n+              <Label htmlFor=\"password\">Password</Label>\r\n+              {isLogin ? (\r\n+                <div className=\"relative\">\r\n+                  <Input\r\n+                    id=\"password\"\r\n+                    type={showPassword ? \"text\" : \"password\"}\r\n+                    placeholder=\"••••••••\"\r\n+                    value={password}\r\n+                    onChange={(e) => setPassword(e.target.value)}\r\n+                    required\r\n+                    className=\"pr-10 transition-smooth\"\r\n+                  />\r\n+                  <button\r\n+                    type=\"button\"\r\n+                    onClick={() => setShowPassword(!showPassword)}\r\n+                    className=\"absolute right-3 top-1/2 -translate-y-1/2 text-muted-foreground hover:text-foreground transition-smooth\"\r\n+                  >\r\n+                    {showPassword ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\r\n+                  </button>\r\n+                </div>\r\n+              ) : (\r\n+                <PasswordInput\r\n+                  id=\"password\"\r\n+                  value={password}\r\n+                  onChange={setPassword}\r\n+                  required\r\n+                />\r\n+              )}\r\n+            </div>\r\n+\r\n+            {!isLogin && (\r\n+              <div className=\"space-y-2\">\r\n+                <Label htmlFor=\"confirm-password\">Confirm Password</Label>\r\n+                <div className=\"relative\">\r\n+                  <Input\r\n+                    id=\"confirm-password\"\r\n+                    type={showConfirmPassword ? \"text\" : \"password\"}\r\n+                    placeholder=\"••••••••\"\r\n+                    value={confirmPassword}\r\n+                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n+                    required={!isLogin}\r\n+                    className={`pr-10 transition-smooth ${\r\n+                      passwordsMatch ? \"border-green-500\" : passwordsDontMatch ? \"border-destructive\" : \"\"\r\n+                    }`}\r\n+                  />\r\n+                  <button\r\n+                    type=\"button\"\r\n+                    onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n+                    className=\"absolute right-3 top-1/2 -translate-y-1/2 text-muted-foreground hover:text-foreground transition-smooth\"\r\n+                  >\r\n+                    {showConfirmPassword ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\r\n+                  </button>\r\n+                </div>\r\n+                {passwordsMatch && (\r\n+                  <p className=\"text-xs text-green-600\">Passwords match ✓</p>\r\n+                )}\r\n+                {passwordsDontMatch && (\r\n+                  <p className=\"text-xs text-destructive\">Passwords don't match</p>\r\n+                )}\r\n+              </div>\r\n+            )}\r\n+\r\n+            {isLogin && (\r\n+              <div className=\"flex items-center justify-between\">\r\n+                <div className=\"flex items-center space-x-2\">\r\n+                  <Checkbox\r\n+                    id=\"remember\"\r\n+                    checked={rememberMe}\r\n+                    onCheckedChange={(checked) => setRememberMe(checked as boolean)}\r\n+                  />\r\n+                  <label\r\n+                    htmlFor=\"remember\"\r\n+                    className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n+                  >\r\n+                    Remember me\r\n+                  </label>\r\n+                </div>\r\n+                <button\r\n+                  type=\"button\"\r\n+                  className=\"text-sm text-primary hover:underline transition-smooth\"\r\n+                >\r\n+                  Forgot password?\r\n+                </button>\r\n+              </div>\r\n+            )}\r\n+\r\n+            <Button\r\n+              type=\"submit\"\r\n+              variant=\"accent\"\r\n+              className=\"w-full\"\r\n+              size=\"lg\"\r\n+              disabled={isLoading}\r\n+            >\r\n+              {isLoading ? (\r\n+                <span className=\"flex items-center gap-2\">\r\n+                  <span className=\"h-4 w-4 animate-spin rounded-full border-2 border-current border-t-transparent\" />\r\n+                  Please wait...\r\n+                </span>\r\n+              ) : isLogin ? (\r\n+                \"Sign In\"\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </Button>\r\n+\r\n+            <div className=\"relative\">\r\n+              <div className=\"absolute inset-0 flex items-center\">\r\n+                <span className=\"w-full border-t\" />\r\n+              </div>\r\n+              <div className=\"relative flex justify-center text-xs uppercase\">\r\n+                <span className=\"bg-background px-2 text-muted-foreground\">\r\n+                  Or continue with\r\n+                </span>\r\n+              </div>\r\n+            </div>\r\n+\r\n+            <SocialLoginButtons />\r\n+\r\n+            <div className=\"text-center\">\r\n+              <button\r\n+                type=\"button\"\r\n+                onClick={() => setIsLogin(!isLogin)}\r\n+                className=\"text-sm text-muted-foreground hover:text-foreground transition-smooth\"\r\n+              >\r\n+                {isLogin ? \"Don't have an account? \" : \"Already have an account? \"}\r\n+                <span className=\"font-semibold text-primary\">\r\n+                  {isLogin ? \"Sign up\" : \"Sign in\"}\r\n+                </span>\r\n+              </button>\r\n+            </div>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Auth;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1759939617778,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -283,9 +283,9 @@\n             )}\r\n \r\n             <Button\r\n               type=\"submit\"\r\n-              variant=\"accent\"\r\n+              variant=\"default\"\r\n               className=\"w-full\"\r\n               size=\"lg\"\r\n               disabled={isLoading}\r\n             >\r\n"
                },
                {
                    "date": 1759939940853,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n import SocialLoginButtons from \"@/components/SocialLoginButtons\";\r\n import { Car, Eye, EyeOff } from \"lucide-react\";\r\n import { toast } from \"@/hooks/use-toast\";\r\n import { passwordSchema } from \"@/lib/validation\";\r\n-import authHero from \"@/assets/auth-hero.jpg\";\r\n+import authHero from \"@C:\\Users\\GamingCorner\\Desktop\\code\\senior\\src\\assets\\hero-car.jpg\";\r\n \r\n const Auth = () => {\r\n   const [searchParams] = useSearchParams();\r\n   const mode = searchParams.get(\"mode\") || \"login\";\r\n@@ -332,179 +332,5 @@\n     </div>\r\n   );\r\n };\r\n \r\n-export default Auth;\n-import { useState, useEffect } from \"react\";\r\n-import { useNavigate, useSearchParams } from \"react-router-dom\";\r\n-import { useAuth } from \"@/contexts/AuthContext\";\r\n-import { Button } from \"@/components/ui/button\";\r\n-import { Input } from \"@/components/ui/input\";\r\n-import { Label } from \"@/components/ui/label\";\r\n-import PasswordInput from \"@/components/PasswordInput\";\r\n-import { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\r\n-import { Car } from \"lucide-react\";\r\n-import { toast } from \"@/hooks/use-toast\";\r\n-import { passwordSchema } from \"@/lib/validation\";\r\n-\r\n-const Auth = () => {\r\n-  const [searchParams] = useSearchParams();\r\n-  const mode = searchParams.get(\"mode\") || \"login\";\r\n-  const [isLogin, setIsLogin] = useState(mode === \"login\");\r\n-  const [name, setName] = useState(\"\");\r\n-  const [email, setEmail] = useState(\"\");\r\n-  const [password, setPassword] = useState(\"\");\r\n-  const [isLoading, setIsLoading] = useState(false);\r\n-  \r\n-  const { login, register, user } = useAuth();\r\n-  const navigate = useNavigate();\r\n-\r\n-  useEffect(() => {\r\n-    if (user) {\r\n-      navigate(\"/\");\r\n-    }\r\n-  }, [user, navigate]);\r\n-\r\n-  useEffect(() => {\r\n-    setIsLogin(mode === \"login\");\r\n-  }, [mode]);\r\n-\r\n-  const handleSubmit = async (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n-    setIsLoading(true);\r\n-\r\n-    try {\r\n-      // Validate password strength\r\n-      if (!isLogin) {\r\n-        const passwordValidation = passwordSchema.safeParse(password);\r\n-        if (!passwordValidation.success) {\r\n-          toast({\r\n-            title: \"Weak password\",\r\n-            description: passwordValidation.error.issues[0].message,\r\n-            variant: \"destructive\",\r\n-          });\r\n-          setIsLoading(false);\r\n-          return;\r\n-        }\r\n-      }\r\n-\r\n-      if (isLogin) {\r\n-        await login(email, password);\r\n-        toast({\r\n-          title: \"Welcome back!\",\r\n-          description: \"You've successfully logged in.\",\r\n-        });\r\n-      } else {\r\n-        if (!name.trim()) {\r\n-          toast({\r\n-            title: \"Name required\",\r\n-            description: \"Please enter your name.\",\r\n-            variant: \"destructive\",\r\n-          });\r\n-          setIsLoading(false);\r\n-          return;\r\n-        }\r\n-        await register(name, email, password);\r\n-        toast({\r\n-          title: \"Account created!\",\r\n-          description: \"Welcome to CarFinder Hub.\",\r\n-        });\r\n-      }\r\n-      navigate(\"/\");\r\n-    } catch (error) {\r\n-      toast({\r\n-        title: \"Error\",\r\n-        description: \"Something went wrong. Please try again.\",\r\n-        variant: \"destructive\",\r\n-      });\r\n-    } finally {\r\n-      setIsLoading(false);\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"flex min-h-screen items-center justify-center bg-gradient-to-br from-background to-secondary p-4\">\r\n-      <Card className=\"w-full max-w-md shadow-card-hover animate-fade-in\">\r\n-        <CardHeader className=\"space-y-4 text-center\">\r\n-          <div className=\"mx-auto flex h-16 w-16 items-center justify-center rounded-full bg-primary/10\">\r\n-            <Car className=\"h-8 w-8 text-primary\" />\r\n-          </div>\r\n-          <div>\r\n-            <CardTitle className=\"text-2xl\">\r\n-              {isLogin ? \"Welcome Back\" : \"Create Account\"}\r\n-            </CardTitle>\r\n-            <CardDescription>\r\n-              {isLogin\r\n-                ? \"Enter your credentials to access your account\"\r\n-                : \"Sign up to start finding your perfect car\"}\r\n-            </CardDescription>\r\n-          </div>\r\n-        </CardHeader>\r\n-\r\n-        <CardContent>\r\n-          <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n-            {!isLogin && (\r\n-              <div className=\"space-y-2\">\r\n-                <Label htmlFor=\"name\">Full Name</Label>\r\n-                <Input\r\n-                  id=\"name\"\r\n-                  type=\"text\"\r\n-                  placeholder=\"John Doe\"\r\n-                  value={name}\r\n-                  onChange={(e) => setName(e.target.value)}\r\n-                  required={!isLogin}\r\n-                />\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"space-y-2\">\r\n-              <Label htmlFor=\"email\">Email</Label>\r\n-              <Input\r\n-                id=\"email\"\r\n-                type=\"email\"\r\n-                placeholder=\"you@example.com\"\r\n-                value={email}\r\n-                onChange={(e) => setEmail(e.target.value)}\r\n-                required\r\n-              />\r\n-            </div>\r\n-\r\n-            <div className=\"space-y-2\">\r\n-              <Label htmlFor=\"password\">Password</Label>\r\n-              <PasswordInput\r\n-                id=\"password\"\r\n-                value={password}\r\n-                onChange={setPassword}\r\n-                required\r\n-              />\r\n-            </div>\r\n-\r\n-            <Button\r\n-              type=\"submit\"\r\n-              variant=\"default\"\r\n-              className=\"w-full\"\r\n-              size=\"lg\"\r\n-              disabled={isLoading}\r\n-            >\r\n-              {isLoading ? \"Please wait...\" : isLogin ? \"Sign In\" : \"Create Account\"}\r\n-            </Button>\r\n-\r\n-            <div className=\"text-center\">\r\n-              <button\r\n-                type=\"button\"\r\n-                onClick={() => setIsLogin(!isLogin)}\r\n-                className=\"text-sm text-muted-foreground hover:text-foreground transition-smooth\"\r\n-              >\r\n-                {isLogin ? \"Don't have an account? \" : \"Already have an account? \"}\r\n-                <span className=\"font-semibold text-primary\">\r\n-                  {isLogin ? \"Sign up\" : \"Sign in\"}\r\n-                </span>\r\n-              </button>\r\n-            </div>\r\n-          </form>\r\n-        </CardContent>\r\n-      </Card>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n export default Auth;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1759939946221,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n import SocialLoginButtons from \"@/components/SocialLoginButtons\";\r\n import { Car, Eye, EyeOff } from \"lucide-react\";\r\n import { toast } from \"@/hooks/use-toast\";\r\n import { passwordSchema } from \"@/lib/validation\";\r\n-import authHero from \"@C:\\Users\\GamingCorner\\Desktop\\code\\senior\\src\\assets\\hero-car.jpg\";\r\n+import authHero from \"@/assets/hero-car.jpg\";\r\n \r\n const Auth = () => {\r\n   const [searchParams] = useSearchParams();\r\n   const mode = searchParams.get(\"mode\") || \"login\";\r\n"
                },
                {
                    "date": 1759941281792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -195,9 +195,9 @@\n               />\r\n             </div>\r\n \r\n             <div className=\"space-y-2\">\r\n-              <Label htmlFor=\"password\">Password</Label>\r\n+              <Label htmlFor=\"password\"></Label>\r\n               {isLogin ? (\r\n                 <div className=\"relative\">\r\n                   <Input\r\n                     id=\"password\"\r\n"
                }
            ],
            "date": 1759428007971,
            "name": "Commit-0",
            "content": "import { useState, useEffect } from \"react\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport { useAuth } from \"@/contexts/AuthContext\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport PasswordInput from \"@/components/PasswordInput\";\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Car } from \"lucide-react\";\r\nimport { toast } from \"@/hooks/use-toast\";\r\nimport { passwordSchema } from \"@/lib/validation\";\r\n\r\nconst Auth = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const mode = searchParams.get(\"mode\") || \"login\";\r\n  const [isLogin, setIsLogin] = useState(mode === \"login\");\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  \r\n  const { login, register, user } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [user, navigate]);\r\n\r\n  useEffect(() => {\r\n    setIsLogin(mode === \"login\");\r\n  }, [mode]);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // Validate password strength\r\n      if (!isLogin) {\r\n        const passwordValidation = passwordSchema.safeParse(password);\r\n        if (!passwordValidation.success) {\r\n          toast({\r\n            title: \"Weak password\",\r\n            description: passwordValidation.error.issues[0].message,\r\n            variant: \"destructive\",\r\n          });\r\n          setIsLoading(false);\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (isLogin) {\r\n        await login(email, password);\r\n        toast({\r\n          title: \"Welcome back!\",\r\n          description: \"You've successfully logged in.\",\r\n        });\r\n      } else {\r\n        if (!name.trim()) {\r\n          toast({\r\n            title: \"Name required\",\r\n            description: \"Please enter your name.\",\r\n            variant: \"destructive\",\r\n          });\r\n          setIsLoading(false);\r\n          return;\r\n        }\r\n        await register(name, email, password);\r\n        toast({\r\n          title: \"Account created!\",\r\n          description: \"Welcome to CarFinder Hub.\",\r\n        });\r\n      }\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Something went wrong. Please try again.\",\r\n        variant: \"destructive\",\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex min-h-screen items-center justify-center bg-gradient-to-br from-background to-secondary p-4\">\r\n      <Card className=\"w-full max-w-md shadow-card-hover animate-fade-in\">\r\n        <CardHeader className=\"space-y-4 text-center\">\r\n          <div className=\"mx-auto flex h-16 w-16 items-center justify-center rounded-full bg-primary/10\">\r\n            <Car className=\"h-8 w-8 text-primary\" />\r\n          </div>\r\n          <div>\r\n            <CardTitle className=\"text-2xl\">\r\n              {isLogin ? \"Welcome Back\" : \"Create Account\"}\r\n            </CardTitle>\r\n            <CardDescription>\r\n              {isLogin\r\n                ? \"Enter your credentials to access your account\"\r\n                : \"Sign up to start finding your perfect car\"}\r\n            </CardDescription>\r\n          </div>\r\n        </CardHeader>\r\n\r\n        <CardContent>\r\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n            {!isLogin && (\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"name\">Full Name</Label>\r\n                <Input\r\n                  id=\"name\"\r\n                  type=\"text\"\r\n                  placeholder=\"John Doe\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  required={!isLogin}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"email\">Email</Label>\r\n              <Input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"you@example.com\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"password\">Password</Label>\r\n              <PasswordInput\r\n                id=\"password\"\r\n                value={password}\r\n                onChange={setPassword}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"accent\"\r\n              className=\"w-full\"\r\n              size=\"lg\"\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? \"Please wait...\" : isLogin ? \"Sign In\" : \"Create Account\"}\r\n            </Button>\r\n\r\n            <div className=\"text-center\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setIsLogin(!isLogin)}\r\n                className=\"text-sm text-muted-foreground hover:text-foreground transition-smooth\"\r\n              >\r\n                {isLogin ? \"Don't have an account? \" : \"Already have an account? \"}\r\n                <span className=\"font-semibold text-primary\">\r\n                  {isLogin ? \"Sign up\" : \"Sign in\"}\r\n                </span>\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"
        }
    ]
}