{
    "sourceFile": "src/pages/Auth.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1759428007971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1759428254477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,9 +143,9 @@\n             </div>\r\n \r\n             <Button\r\n               type=\"submit\"\r\n-              variant=\"accent\"\r\n+              variant=\"default\"\r\n               className=\"w-full\"\r\n               size=\"lg\"\r\n               disabled={isLoading}\r\n             >\r\n"
                }
            ],
            "date": 1759428007971,
            "name": "Commit-0",
            "content": "import { useState, useEffect } from \"react\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport { useAuth } from \"@/contexts/AuthContext\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport PasswordInput from \"@/components/PasswordInput\";\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Car } from \"lucide-react\";\r\nimport { toast } from \"@/hooks/use-toast\";\r\nimport { passwordSchema } from \"@/lib/validation\";\r\n\r\nconst Auth = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const mode = searchParams.get(\"mode\") || \"login\";\r\n  const [isLogin, setIsLogin] = useState(mode === \"login\");\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  \r\n  const { login, register, user } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [user, navigate]);\r\n\r\n  useEffect(() => {\r\n    setIsLogin(mode === \"login\");\r\n  }, [mode]);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // Validate password strength\r\n      if (!isLogin) {\r\n        const passwordValidation = passwordSchema.safeParse(password);\r\n        if (!passwordValidation.success) {\r\n          toast({\r\n            title: \"Weak password\",\r\n            description: passwordValidation.error.issues[0].message,\r\n            variant: \"destructive\",\r\n          });\r\n          setIsLoading(false);\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (isLogin) {\r\n        await login(email, password);\r\n        toast({\r\n          title: \"Welcome back!\",\r\n          description: \"You've successfully logged in.\",\r\n        });\r\n      } else {\r\n        if (!name.trim()) {\r\n          toast({\r\n            title: \"Name required\",\r\n            description: \"Please enter your name.\",\r\n            variant: \"destructive\",\r\n          });\r\n          setIsLoading(false);\r\n          return;\r\n        }\r\n        await register(name, email, password);\r\n        toast({\r\n          title: \"Account created!\",\r\n          description: \"Welcome to CarFinder Hub.\",\r\n        });\r\n      }\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Something went wrong. Please try again.\",\r\n        variant: \"destructive\",\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex min-h-screen items-center justify-center bg-gradient-to-br from-background to-secondary p-4\">\r\n      <Card className=\"w-full max-w-md shadow-card-hover animate-fade-in\">\r\n        <CardHeader className=\"space-y-4 text-center\">\r\n          <div className=\"mx-auto flex h-16 w-16 items-center justify-center rounded-full bg-primary/10\">\r\n            <Car className=\"h-8 w-8 text-primary\" />\r\n          </div>\r\n          <div>\r\n            <CardTitle className=\"text-2xl\">\r\n              {isLogin ? \"Welcome Back\" : \"Create Account\"}\r\n            </CardTitle>\r\n            <CardDescription>\r\n              {isLogin\r\n                ? \"Enter your credentials to access your account\"\r\n                : \"Sign up to start finding your perfect car\"}\r\n            </CardDescription>\r\n          </div>\r\n        </CardHeader>\r\n\r\n        <CardContent>\r\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n            {!isLogin && (\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"name\">Full Name</Label>\r\n                <Input\r\n                  id=\"name\"\r\n                  type=\"text\"\r\n                  placeholder=\"John Doe\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  required={!isLogin}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"email\">Email</Label>\r\n              <Input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"you@example.com\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"password\">Password</Label>\r\n              <PasswordInput\r\n                id=\"password\"\r\n                value={password}\r\n                onChange={setPassword}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"accent\"\r\n              className=\"w-full\"\r\n              size=\"lg\"\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? \"Please wait...\" : isLogin ? \"Sign In\" : \"Create Account\"}\r\n            </Button>\r\n\r\n            <div className=\"text-center\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setIsLogin(!isLogin)}\r\n                className=\"text-sm text-muted-foreground hover:text-foreground transition-smooth\"\r\n              >\r\n                {isLogin ? \"Don't have an account? \" : \"Already have an account? \"}\r\n                <span className=\"font-semibold text-primary\">\r\n                  {isLogin ? \"Sign up\" : \"Sign in\"}\r\n                </span>\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"
        }
    ]
}